// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id               Int              @id @default(autoincrement())
  email            String           @unique
  senha_hash       String
  created_at       DateTime         @default(now())
  produtos         Produto[]
  codigos_barras   CodigoBarras[]
  contagens_salvas ContagemSalva[]
  contagens        Contagem[] // Relação com Contagem

  @@map("usuarios")
}

model Produto {
  id             Int            @id @default(autoincrement())
  codigo_produto String
  descricao      String
  created_at     DateTime       @default(now())
  usuario_id     Int
  usuario        Usuario        @relation(fields: [usuario_id], references: [id])
  codigos_barras CodigoBarras[]
  itens_contados ItemContado[] // Relação com ItemContado

  @@unique([codigo_produto, usuario_id])
  @@map("produtos")
}

model CodigoBarras {
  codigo_de_barras String
  produto_id       Int
  created_at       DateTime @default(now())
  usuario_id       Int
  usuario          Usuario  @relation(fields: [usuario_id], references: [id])
  produto          Produto  @relation(fields: [produto_id], references: [id], onDelete: Cascade)

  @@id([codigo_de_barras, usuario_id])
  @@map("codigos_de_barras")
}

model ContagemSalva {
  id           Int      @id @default(autoincrement())
  nome_arquivo String
  conteudo_csv String
  created_at   DateTime @default(now())
  usuario_id   Int
  usuario      Usuario  @relation(fields: [usuario_id], references: [id], onDelete: Cascade)

  @@map("contagens_salvas")
}

// --- NOVOS MODELOS ADICIONADOS ABAIXO ---

model Contagem {
  id          Int           @id @default(autoincrement())
  usuario_id  Int
  usuario     Usuario       @relation(fields: [usuario_id], references: [id], onDelete: Cascade)
  created_at  DateTime      @default(now())
  finished_at DateTime?
  status      String        @default("em_andamento") // Ex: em_andamento, finalizada
  itens       ItemContado[]

  @@map("contagens")
}

model ItemContado {
  id            Int      @id @default(autoincrement())
  contagem_id   Int
  contagem      Contagem @relation(fields: [contagem_id], references: [id], onDelete: Cascade)
  produto_id    Int
  produto       Produto  @relation(fields: [produto_id], references: [id], onDelete: Cascade)
  quant_loja    Float    @default(0)
  quant_estoque Float    @default(0)
  data_validade DateTime? // <-- CAMPO ADICIONADO (DateTime para datas)
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt

  // Índice único para evitar duplicidade do mesmo produto/validade na mesma contagem
  @@unique([contagem_id, produto_id, data_validade])
  @@map("itens_contados")
}